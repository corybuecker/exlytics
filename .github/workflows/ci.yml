name: Continuous Integration

on:
  push:
    branches:
      - main

env:
  CLOUDSDK_COMPUTE_REGION: us-central1
  CLOUDSDK_COMPUTE_ZONE: us-central1-c

jobs:
  image:
    name: Build image

    runs-on: ubuntu-latest

    # needs: [dependencies]

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Install GCP
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: latest
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.CLOUDSDK_CORE_PROJECT }}
          service_account_email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          export_default_credentials: true

      - name: Configure Docker
        run: gcloud --quiet auth configure-docker

      - name: Create image
        run: docker build -t ${{ secrets.IMAGE_TAG }}:${{ github.sha }} .

      - name: Push image
        run: docker push ${{ secrets.IMAGE_TAG }}:${{ github.sha }}

  # dependencies:
  #   name: Dependencies

  #   runs-on: ubuntu-latest

  #   container: elixir:1.10.4-alpine

  #   env:
  #     MIX_ENV: test
  #     DATABASE_CONNECTION_URL: "ecto://postgres@postgres:5432/exlytics_test"

  #   services:
  #     postgres:
  #       image: postgres:11-alpine
  #       env:
  #         POSTGRES_HOST_AUTH_METHOD: trust
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@master

  #     - name: Setup database
  #       run: |
  #         apk add postgresql
  #         psql -h postgres -U postgres -c "create database exlytics_test"
  #         psql -h postgres -U postgres -c "create role dashboard"
  #         psql -h postgres -U postgres -d exlytics_test -c "create schema exlytics"

  #     - name: Download dependencies
  #       run: |
  #         mix local.hex --force
  #         mix local.rebar --force
  #         mix deps.get

  #     - name: Check outdated packages
  #       run: mix hex.outdated

  #     - name: Lint
  #       run: mix credo

  #     - name: Migrate test database
  #       run: mix ecto.migrate

  #     - name: Run tests
  #       run: mix test
